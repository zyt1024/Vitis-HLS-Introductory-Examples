-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity example_streamtoparallelwithburst is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    buf_r_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    buf_r_empty_n : IN STD_LOGIC;
    buf_r_read : OUT STD_LOGIC;
    count7_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    count7_empty_n : IN STD_LOGIC;
    count7_read : OUT STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of example_streamtoparallelwithburst is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (18 downto 0) := "0000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (18 downto 0) := "0000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (18 downto 0) := "0000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (18 downto 0) := "0000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (18 downto 0) := "0000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (18 downto 0) := "0001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (18 downto 0) := "0010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (18 downto 0) := "0100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal count7_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal gmem0_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal gmem0_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal icmp_ln24_reg_207 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_200 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln24_fu_110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln_reg_211 : STD_LOGIC_VECTOR (60 downto 0);
    signal trunc_ln24_fu_147_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln24_reg_222 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_ap_start : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_ap_done : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_ap_idle : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_ap_ready : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_buf_r_read : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_phi_ln26_out : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_phi_ln26_out_ap_vld : STD_LOGIC;
    signal grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal sext_ln24_fu_137_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state19 : BOOLEAN;
    signal idx_fu_60 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln29_fu_165_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal in_val_last_V_load_load_fu_159_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal in_val_last_V_fu_64 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln24_fu_110_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln24_fu_116_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln24_fu_122_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln29_fu_162_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component example_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        buf_r_dout : IN STD_LOGIC_VECTOR (127 downto 0);
        buf_r_empty_n : IN STD_LOGIC;
        buf_r_read : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln24 : IN STD_LOGIC_VECTOR (60 downto 0);
        trunc_ln24_1 : IN STD_LOGIC_VECTOR (30 downto 0);
        phi_ln26_out : OUT STD_LOGIC_VECTOR (0 downto 0);
        phi_ln26_out_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91 : component example_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_ap_start,
        ap_done => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_ap_done,
        ap_idle => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_ap_idle,
        ap_ready => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_ap_ready,
        buf_r_dout => buf_r_dout,
        buf_r_empty_n => buf_r_empty_n,
        buf_r_read => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_buf_r_read,
        m_axi_gmem0_AWVALID => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => ap_const_logic_0,
        m_axi_gmem0_ARADDR => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => ap_const_logic_0,
        m_axi_gmem0_RREADY => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => ap_const_lv64_0,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => m_axi_gmem0_BRESP,
        m_axi_gmem0_BID => m_axi_gmem0_BID,
        m_axi_gmem0_BUSER => m_axi_gmem0_BUSER,
        sext_ln24 => trunc_ln_reg_211,
        trunc_ln24_1 => trunc_ln24_reg_222,
        phi_ln26_out => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_phi_ln26_out,
        phi_ln26_out_ap_vld => grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_phi_ln26_out_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((m_axi_gmem0_BVALID = ap_const_logic_0) and (icmp_ln24_reg_207 = ap_const_lv1_1))) and (in_val_last_V_load_load_fu_159_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_ap_ready = ap_const_logic_1)) then 
                    grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    idx_fu_60_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                idx_fu_60 <= ap_const_lv64_0;
            elsif ((not(((m_axi_gmem0_BVALID = ap_const_logic_0) and (icmp_ln24_reg_207 = ap_const_lv1_1))) and (in_val_last_V_load_load_fu_159_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                idx_fu_60 <= add_ln29_fu_165_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                icmp_ln24_reg_207 <= icmp_ln24_fu_110_p2;
                tmp_reg_200 <= count7_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                in_val_last_V_fu_64 <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_phi_ln26_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                trunc_ln24_reg_222 <= trunc_ln24_fu_147_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln24_fu_110_p2 = ap_const_lv1_1))) then
                trunc_ln_reg_211 <= add_ln24_fu_122_p2(63 downto 3);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, count7_empty_n, m_axi_gmem0_AWREADY, m_axi_gmem0_BVALID, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state19, icmp_ln24_reg_207, icmp_ln24_fu_110_p2, grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_ap_done, ap_CS_fsm_state5, in_val_last_V_load_load_fu_159_p1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((count7_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln24_fu_110_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                elsif (((count7_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln24_fu_110_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((m_axi_gmem0_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if ((not(((m_axi_gmem0_BVALID = ap_const_logic_0) and (icmp_ln24_reg_207 = ap_const_lv1_1))) and (in_val_last_V_load_load_fu_159_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not(((m_axi_gmem0_BVALID = ap_const_logic_0) and (icmp_ln24_reg_207 = ap_const_lv1_1))) and (in_val_last_V_load_load_fu_159_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln24_fu_122_p2 <= std_logic_vector(unsigned(shl_ln24_fu_116_p2) + unsigned(p_read));
    add_ln29_fu_165_p2 <= std_logic_vector(signed(sext_ln29_fu_162_p1) + signed(idx_fu_60));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;

    ap_ST_fsm_state19_blk_assign_proc : process(m_axi_gmem0_BVALID, icmp_ln24_reg_207)
    begin
        if (((m_axi_gmem0_BVALID = ap_const_logic_0) and (icmp_ln24_reg_207 = ap_const_lv1_1))) then 
            ap_ST_fsm_state19_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state19_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(count7_empty_n)
    begin
        if ((count7_empty_n = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(m_axi_gmem0_AWREADY)
    begin
        if ((m_axi_gmem0_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_ap_done)
    begin
        if ((grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state19_assign_proc : process(m_axi_gmem0_BVALID, icmp_ln24_reg_207)
    begin
                ap_block_state19 <= ((m_axi_gmem0_BVALID = ap_const_logic_0) and (icmp_ln24_reg_207 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, m_axi_gmem0_BVALID, ap_CS_fsm_state19, icmp_ln24_reg_207, in_val_last_V_load_load_fu_159_p1)
    begin
        if ((not(((m_axi_gmem0_BVALID = ap_const_logic_0) and (icmp_ln24_reg_207 = ap_const_lv1_1))) and (in_val_last_V_load_load_fu_159_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(m_axi_gmem0_BVALID, ap_CS_fsm_state19, icmp_ln24_reg_207, in_val_last_V_load_load_fu_159_p1)
    begin
        if ((not(((m_axi_gmem0_BVALID = ap_const_logic_0) and (icmp_ln24_reg_207 = ap_const_lv1_1))) and (in_val_last_V_load_load_fu_159_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    buf_r_read_assign_proc : process(grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_buf_r_read, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            buf_r_read <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_buf_r_read;
        else 
            buf_r_read <= ap_const_logic_0;
        end if; 
    end process;


    count7_blk_n_assign_proc : process(count7_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            count7_blk_n <= count7_empty_n;
        else 
            count7_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    count7_read_assign_proc : process(count7_empty_n, ap_CS_fsm_state2)
    begin
        if (((count7_empty_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            count7_read <= ap_const_logic_1;
        else 
            count7_read <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_blk_n_AW_assign_proc : process(m_axi_gmem0_AWREADY, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            gmem0_blk_n_AW <= m_axi_gmem0_AWREADY;
        else 
            gmem0_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem0_blk_n_B_assign_proc : process(m_axi_gmem0_BVALID, ap_CS_fsm_state19, icmp_ln24_reg_207)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln24_reg_207 = ap_const_lv1_1))) then 
            gmem0_blk_n_B <= m_axi_gmem0_BVALID;
        else 
            gmem0_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;

    grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_ap_start <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_ap_start_reg;
    icmp_ln24_fu_110_p0 <= count7_dout;
    icmp_ln24_fu_110_p2 <= "1" when (signed(icmp_ln24_fu_110_p0) > signed(ap_const_lv32_0)) else "0";
    in_val_last_V_load_load_fu_159_p1 <= in_val_last_V_fu_64;
    m_axi_gmem0_ARADDR <= ap_const_lv64_0;
    m_axi_gmem0_ARBURST <= ap_const_lv2_0;
    m_axi_gmem0_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem0_ARID <= ap_const_lv1_0;
    m_axi_gmem0_ARLEN <= ap_const_lv32_0;
    m_axi_gmem0_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem0_ARPROT <= ap_const_lv3_0;
    m_axi_gmem0_ARQOS <= ap_const_lv4_0;
    m_axi_gmem0_ARREGION <= ap_const_lv4_0;
    m_axi_gmem0_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem0_ARUSER <= ap_const_lv1_0;
    m_axi_gmem0_ARVALID <= ap_const_logic_0;

    m_axi_gmem0_AWADDR_assign_proc : process(m_axi_gmem0_AWREADY, ap_CS_fsm_state3, ap_CS_fsm_state4, grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWADDR, ap_CS_fsm_state5, sext_ln24_fu_137_p1)
    begin
        if (((m_axi_gmem0_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem0_AWADDR <= sext_ln24_fu_137_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_AWADDR <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWADDR;
        else 
            m_axi_gmem0_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem0_AWBURST_assign_proc : process(ap_CS_fsm_state4, grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWBURST, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_AWBURST <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWBURST;
        else 
            m_axi_gmem0_AWBURST <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_gmem0_AWCACHE_assign_proc : process(ap_CS_fsm_state4, grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWCACHE, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_AWCACHE <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWCACHE;
        else 
            m_axi_gmem0_AWCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem0_AWID_assign_proc : process(ap_CS_fsm_state4, grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWID, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_AWID <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWID;
        else 
            m_axi_gmem0_AWID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem0_AWLEN_assign_proc : process(m_axi_gmem0_AWREADY, ap_CS_fsm_state3, tmp_reg_200, ap_CS_fsm_state4, grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWLEN, ap_CS_fsm_state5)
    begin
        if (((m_axi_gmem0_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem0_AWLEN <= tmp_reg_200;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_AWLEN <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWLEN;
        else 
            m_axi_gmem0_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem0_AWLOCK_assign_proc : process(ap_CS_fsm_state4, grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWLOCK, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_AWLOCK <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWLOCK;
        else 
            m_axi_gmem0_AWLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_gmem0_AWPROT_assign_proc : process(ap_CS_fsm_state4, grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWPROT, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_AWPROT <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWPROT;
        else 
            m_axi_gmem0_AWPROT <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_gmem0_AWQOS_assign_proc : process(ap_CS_fsm_state4, grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWQOS, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_AWQOS <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWQOS;
        else 
            m_axi_gmem0_AWQOS <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem0_AWREGION_assign_proc : process(ap_CS_fsm_state4, grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWREGION, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_AWREGION <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWREGION;
        else 
            m_axi_gmem0_AWREGION <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem0_AWSIZE_assign_proc : process(ap_CS_fsm_state4, grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWSIZE, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_AWSIZE <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWSIZE;
        else 
            m_axi_gmem0_AWSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_gmem0_AWUSER_assign_proc : process(ap_CS_fsm_state4, grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWUSER, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_AWUSER <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWUSER;
        else 
            m_axi_gmem0_AWUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem0_AWVALID_assign_proc : process(m_axi_gmem0_AWREADY, ap_CS_fsm_state3, ap_CS_fsm_state4, grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWVALID, ap_CS_fsm_state5)
    begin
        if (((m_axi_gmem0_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem0_AWVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_AWVALID <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_AWVALID;
        else 
            m_axi_gmem0_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem0_BREADY_assign_proc : process(m_axi_gmem0_BVALID, ap_CS_fsm_state19, icmp_ln24_reg_207, ap_CS_fsm_state4, grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_BREADY, ap_CS_fsm_state5)
    begin
        if ((not(((m_axi_gmem0_BVALID = ap_const_logic_0) and (icmp_ln24_reg_207 = ap_const_lv1_1))) and (ap_const_logic_1 = ap_CS_fsm_state19) and (icmp_ln24_reg_207 = ap_const_lv1_1))) then 
            m_axi_gmem0_BREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_BREADY <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_BREADY;
        else 
            m_axi_gmem0_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem0_RREADY <= ap_const_logic_0;
    m_axi_gmem0_WDATA <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_WDATA;
    m_axi_gmem0_WID <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_WID;
    m_axi_gmem0_WLAST <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_WLAST;
    m_axi_gmem0_WSTRB <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_WSTRB;
    m_axi_gmem0_WUSER <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_WUSER;

    m_axi_gmem0_WVALID_assign_proc : process(ap_CS_fsm_state4, grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_WVALID, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem0_WVALID <= grp_streamtoparallelwithburst_Pipeline_VITIS_LOOP_24_2_fu_91_m_axi_gmem0_WVALID;
        else 
            m_axi_gmem0_WVALID <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln24_fu_137_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_reg_211),64));

        sext_ln29_fu_162_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_reg_200),64));

    shl_ln24_fu_116_p2 <= std_logic_vector(shift_left(unsigned(idx_fu_60),to_integer(unsigned('0' & ap_const_lv64_3(31-1 downto 0)))));
    trunc_ln24_fu_147_p1 <= tmp_reg_200(31 - 1 downto 0);
end behav;
